name: Code of Code Workflow

on:
  push:
    branches:
      - main
      - dev

  pull_request:
    branches:
      - main
      - dev

jobs:
  coc:
    name: Run Code of Code workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-v1

      - name: Install Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -

      - name: Source Poetry
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Cache Package Dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ runner.os }}-v1-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-v1-

      - name: Install Dependencies via Poetry
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry install

      - name: Check Import Issues
        run: poetry run isort --profile black --check --diff --virtual-env .venv .

      - name: Check Code Formatting
        run: poetry run black --check --diff .

      - name: Check Static Typing
        run: poetry run mypy -p expense_tracker

      - name: Check Code Linting
        run: poetry run pylint --rcfile=.pylintrc expense_tracker

      - name: Execute tests
        run: poetry run python -m pytest tests
